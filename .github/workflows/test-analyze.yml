# ==================================================
# This is the main worflow for testing and analyzing
# the code.
# ==================================================

name: CI

on:
  pull_request:
    types: [opened, synchronize]
    branches: 
      - master
  workflow_dispatch:

env:
  flutter_version: "3.7.9"
  flutter_channel: "stable"
  java_version: "12.x"

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Fetch code from repository
        uses: actions/checkout@v2

      - name: Setup env
        run: |
          echo ${{ secrets.ADMIN_ENV }} | base64 -d > _apps/kapira_admin/.env

      - name: Setup the Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          flutter-version: ${{ env.flutter_version }}

      - name: Setup Melos
        run: |
          # Disable fvm
          sed -i 's|sdkPath:|#sdkPath:|g' melos.yaml

          # Activate melos
          dart pub global activate melos

      - name: Get Flutter dependencies
        run: melos get

      - name: Check for any formatting issues
        run: melos format

      - name: Build generated code
        run: melos build --no-select

      - name: Statically analyze the Dart code
        run: melos analyze

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Fetch code from repository
        uses: actions/checkout@v2

      - name: Setup the Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:"
          flutter-version: ${{ env.flutter_version }}

      - name: Setup Melos
        run: |
          # Disable fvm
          sed -i 's|sdkPath:|#sdkPath:|g' melos.yaml

          # Activate melos
          dart pub global activate melos

      - name: Get Flutter dependencies
        run: melos get

      - name: Run tests and generate coverage
        run: melos test

      - name: Get code coverage files
        id: get_codecov_files
        run: |
          echo "CODECOV_FILES=$(
            find . -name 'lcov.info' -print0 | tr '\0' , | sed 's/,$//'
          )" >> $GITHUB_OUTPUT

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          fail_ci_if_error: true
          file: ${{ steps.get_codecov_files.outputs.CODECOV_FILES }}
